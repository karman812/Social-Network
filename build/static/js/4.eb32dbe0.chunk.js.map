{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","Row","Col","xs","className","styles","dialog","to","id","name","Message","message","text","maxlength20","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","Dialogs","state","messagesPage","DialogsElements","dialogsData","map","el","key","MessagesElements","messagesData","dialogs","dialogItems","active","messages","send_message_col","value","sendMessage","AddMessageBody","isAuthDialogs","withAuthRedirect","compose","connect","isAuth","authPage","toggle","dispatch","sendMessageCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,OAAS,wBAAwB,eAAiB,gCAAgC,iBAAmB,oC,gHCYnJC,EAPI,SAACC,GAChB,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAWC,IAAOC,QAAQ,kBAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,IAAKR,EAAMS,SCChFC,EALC,SAACV,GACb,OACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAWC,IAAOM,SAAUX,EAAMY,O,kCCFjDC,EAAaC,YAAiB,IAWzBC,EAAuBC,YAAU,CAACC,KAAM,wBAAjBD,EATX,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,YAAY,oGAAoBd,KAAK,iBAAiBe,SAAU,CAACC,IAAcZ,KAC3G,8FC4CGa,EA/CC,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,aAEdC,EAAkB7B,EAAM4B,aAAaE,YAAYC,KAAI,SAAAC,GACrD,OACI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAGvB,KAAMwB,IAAKD,EAAGxB,GAAIA,GAAIwB,EAAGxB,QAGlD0B,EAAmBP,EAAMQ,aAAaJ,KAAI,SAAAC,GAC1C,OACI,kBAAC,EAAD,CAASpB,KAAMoB,EAAGrB,QAASsB,IAAKD,EAAGxB,GAAIA,GAAIwB,EAAGxB,QAOtD,OACI,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAWC,IAAO+B,SAC3B,kBAACnC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,UAAWC,IAAOgC,aAC1B,kBAACpC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAWC,IAAOC,OAAS,IAAMD,IAAOiC,QAChDT,KAIb,kBAAC3B,EAAA,EAAD,CAAKC,GAAG,IAAIC,UAAWC,IAAOkC,UAC1B,kBAACtC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACH+B,IAGT,kBAACjC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,UAAWC,IAAOmC,kBAC3B,kBAACzB,EAAD,CAAqBG,SAvB7B,SAACuB,GACjBzC,EAAM0C,YAAYD,EAAME,0B,uBCD5BC,EAAgBC,YAAiBnB,GAEtBoB,sBAAQC,aARD,SAACpB,GACnB,MAAO,CACHC,aAAcD,EAAMC,aACpBoB,OAAQrB,EAAMsB,SAASC,WAXN,SAACC,GAEtB,MAAO,CACHT,YAAa,SAAC/B,GACVwC,EAASC,YAAmBzC,SAY4BkC,IAArDC,CAAuEF","file":"static/js/4.eb32dbe0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItems\":\"Dialogs_dialogItems__2yFQl\",\"active\":\"Dialogs_active__T4VJW\",\"message_button\":\"Dialogs_message_button__2uXCx\",\"send_message_col\":\"Dialogs_send_message_col__Df1l4\"};","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col xs='12' className={styles.dialog}><NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink></Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default DialogItem;","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <Col xs='12' className={styles.message}>{props.text}</Col>\r\n    );\r\n}\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport React from \"react\";\r\n\r\nconst maxlength20 =maxLengthCreator(20)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} placeholder='введите сообщение' name='AddMessageBody' validate={[requiredField,maxlength20]}/>\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport let AddMessageFormRedux =  reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {AddMessageFormRedux} from \"./Message/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage\r\n\r\n    let DialogsElements = props.messagesPage.dialogsData.map(el => {\r\n        return (\r\n            <DialogItem name={el.name} key={el.id} id={el.id}/>\r\n        )\r\n    })\r\n    let MessagesElements = state.messagesData.map(el => {\r\n        return (\r\n            <Message text={el.message} key={el.id} id={el.id}/>\r\n        )\r\n    })\r\n\r\n    let addNewMessage = (value) =>{\r\n        props.sendMessage(value.AddMessageBody)\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col xs='12' className={styles.dialogs}>\r\n                <Row>\r\n                    <Col xs='4' className={styles.dialogItems}>\r\n                        <Row>\r\n                            <Col xs='12' className={styles.dialog + ' ' + styles.active}>\r\n                                {DialogsElements}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs='8' className={styles.messages}>\r\n                        <Row>\r\n                            <Col xs='12'>\r\n                                {MessagesElements}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n\r\n                            <Col xs='12' className={styles.send_message_col}>\r\n                                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n\r\n    return {\r\n        sendMessage: (message) =>{\r\n            dispatch(sendMessageCreator(message))\r\n        }\r\n    }\r\n}\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n        isAuth: state.authPage.toggle\r\n    }\r\n}\r\nlet isAuthDialogs = withAuthRedirect(Dialogs)\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(isAuthDialogs);"],"sourceRoot":""}