{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","assets/images/london.jpg","components/Profile/Myposts/Myposts.module.css","components/Profile/Myposts/Post/Post.module.css","assets/images/avatar.png","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/Myposts.jsx","components/Profile/Myposts/MypostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatus","props","useState","editMode","setEditMode","console","log","Col","xs","fullName","className","styles","statusText","onDoubleClick","status","autoFocus","onBlur","type","value","contacts","twitter","href","ProfileInfo","Row","wallper","src","userAva","photos","large","alt","ProfileStatusWithHooks","aboutMe","Post","item","avatar","message","like_col","likesCount","maxLenngth10","maxLengthCreator","Myposts","memo","postsElements","posts","map","el","NewPostCol","AddPostReduxForm","onSubmit","addPost","NewPostBody","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","requiredField","MypostsContainer","connect","state","profilePage","postData","newPostText","dispatch","newPostBody","addPostActionCreator","Profile","profile","ProfileContainer","componentDidMount","userId","match","params","getUsersProfile","render","compose","isAuth","authPage","toggle","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.b1dc959a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallper\":\"ProfileInfo_wallper__1Gtln\",\"statusText\":\"ProfileInfo_statusText__2yW9i\",\"userAva\":\"ProfileInfo_userAva__3TzIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__wRWj2\",\"wallper\":\"Profile_wallper__3qZtY\"};","module.exports = __webpack_public_path__ + \"static/media/london.d168bddc.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewPostCol\":\"Myposts_NewPostCol__3s84e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1vE9N\",\"like_col\":\"Post_like_col__GjOHx\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.26703c84.png\";","import React from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col xs='6'>\r\n                <h1>{this.props.fullName}</h1>\r\n                <span>Статус: </span>\r\n                {\r\n                    !this.state.editMode && <div><span className={styles.statusText} onDoubleClick={this.activateEditMode}>{this.props.status}</span></div>\r\n                }\r\n                {\r\n                    this.state.editMode && <div><input autoFocus={false} onBlur={this.deActivateEditMode} type=\"text\" value={this.props.status}/></div>\r\n                }\r\n\r\n                {this.props.contacts.twitter && <div><span>Contacts: </span><div><a href={this.props.contacts.twitter}>twitter</a></div></div>}\r\n\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus\r\n","import React, {useState} from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatus = (props) =>{\r\n    // let stateWithSetState = useState(false)\r\n    // let editMode = stateWithSetState[0]\r\n    // let setEditMode = stateWithSetState[0]\r\n    let [editMode, setEditMode] = useState(false)\r\n    console.log(editMode,setEditMode)\r\n    // activateEditMode = () => {\r\n    //     this.setState({\r\n    //         editMode: true\r\n    //     })\r\n    // }\r\n    // deActivateEditMode = () => {\r\n    //     this.setState({\r\n    //         editMode: false\r\n    //     })\r\n    // }\r\n    const activateEditMode = () =>{\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode = () =>{\r\n        setEditMode(false)\r\n    }\r\n    // console.log(props)\r\n        return(\r\n            <Col xs='6'>\r\n                <h1>{props.fullName}</h1>\r\n                <span>Статус: </span>\r\n                {\r\n                    !editMode && <div><span className={styles.statusText} onDoubleClick={activateEditMode}>{props.status}</span></div>\r\n                }\r\n                {\r\n                    editMode && <div><input autoFocus={false} onBlur={deActivateEditMode} type=\"text\" value={props.status}/></div>\r\n                }\r\n\r\n                {props.contacts.twitter && <div><span>Contacts: </span><div><a href={props.contacts.twitter}>twitter</a></div></div>}\r\n\r\n            </Col>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatus\r\n","import React from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport wallper from './../../../assets/images/london.jpg'\r\nimport Preloder from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if(!props.props){\r\n        return <Preloder />\r\n    }\r\n    return (\r\n\r\n        <Col xs='12'>\r\n            <Row>\r\n            <Col xs='12'>\r\n                <img className={styles.wallper} src={wallper}></img>\r\n            </Col>\r\n            <Col xs='6'>\r\n                <img  className = {styles.userAva} src={props.props.photos.large} alt=\"\"/>\r\n            </Col>\r\n            <ProfileStatusWithHooks status={props.props.aboutMe} contacts={props.props.contacts} fullName={props.props.fullName}/>\r\n            </Row>\r\n        </Col>\r\n\r\n)\r\n\r\n}\r\nexport default  ProfileInfo","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport styles from './Post.module.css';\r\nimport  avatar from './../../../../assets/images/avatar.png'\r\n\r\n\r\nconst Post = (props) =>{\r\n    return(\r\n        <Row>\r\n            <Col xs='auto' className={styles.item}>\r\n                <Row>\r\n                    <Col xs='12'>\r\n                        <img src={avatar} alt=\"\"/>\r\n                        {props.message}\r\n                    </Col>\r\n                    <Col xs='12' className={styles.like_col}>\r\n                        <span>Like {props.likesCount}</span>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport styles from \"./Myposts.module.css\"\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLenngth10 = maxLengthCreator(10)\r\nconst Myposts = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map(el => {\r\n        return (\r\n            <Post message={el.message} likesCount={el.likesCount}/>\r\n        )\r\n    })\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.NewPostBody)\r\n    }\r\n    return (\r\n        <Col xs='12'>\r\n            <Row>\r\n                <Col xs='12' className={styles.NewPostCol}>\r\n                    {/*<textarea ref={newElementPost} value={props.newPostText} onChange={onPostChange}></textarea>*/}\r\n                    {/*<button onClick={onAddPost}>Add post</button>*/}\r\n                    <AddPostReduxForm onSubmit={onAddPost}/>\r\n                    <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSchQ_1NZwSP75Sx0hyVwAc3cuWNrJHS_62I7CUkjSV3Seiupg/viewform\"></a>\r\n                </Col>\r\n            </Row>\r\n            {postsElements}\r\n        </Col>\r\n    );\r\n})\r\nconst addPostForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} placeholder={'Напишите свой первый пост'} name={'NewPostBody'} validate={[requiredField, maxLenngth10]}/>\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\nconst  AddPostReduxForm = reduxForm({form: 'newPostReduxForm'})(addPostForm)\r\nexport default Myposts;","import React from 'react';\r\n\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport Myposts from \"./Myposts\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        posts: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPost: (newPostBody) =>{\r\n            dispatch(addPostActionCreator(newPostBody))\r\n        }\r\n    }\r\n}\r\nlet  MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(Myposts)\r\nexport default MypostsContainer;","import React from 'react';\r\nimport styles from \"./Profile.module.css\";\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MypostsContainer from \"./Myposts/MypostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <Row>\r\n            <ProfileInfo props={props.profile}/>\r\n            <MypostsContainer />\r\n        </Row>\r\n    )\r\n}\r\nexport default Profile;\r\n\r\n\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserProfile} from './../../redux/profile-reducer'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getUsersProfile} from './../../redux/profile-reducer';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n    componentDidMount = () => {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId){\r\n            userId = '2'\r\n        }\r\n        this.props.getUsersProfile(userId)\r\n    }\r\n\r\n    render = () =>{\r\n        // if(this.props.isAuth == false) return (\r\n        //     <Redirect to='/login'/>\r\n        //     )\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.authPage.toggle\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, {getUsersProfile}),withRouter,withAuthRedirect)(ProfileContainer)"],"sourceRoot":""}