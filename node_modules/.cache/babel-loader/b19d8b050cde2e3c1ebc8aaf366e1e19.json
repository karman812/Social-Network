{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0433\\u0430\\\\react\\\\1project\\\\my-app\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { addStatusActionCreator, getUsersProfile } from './../../redux/profile-reducer';\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\n\nclass ProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.refreshProfile = () => {\n      let userId = this.props.match.params.userId;\n\n      if (!userId) {\n        userId = '2';\n      }\n\n      this.props.getUsersProfile(userId);\n    };\n\n    this.componentDidMount = () => {\n      this.refreshProfile();\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n        profile: this.props.profile,\n        addStatus: this.props.addStatusActionCreator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }));\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    isAuth: state.authPage.toggle,\n    addStatus: state.profilePage.status\n  };\n}; // let mapDispatchToProps = (dispatch) =>{\n//\n//     return {\n//         addStatus: (status) =>{\n//             dispatch(addStatusActionCreator(status))\n//         }\n//     }\n// }\n\n\nexport default compose(connect(mapStateToProps, {\n  getUsersProfile,\n  addStatusActionCreator\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","withRouter","addStatusActionCreator","getUsersProfile","withAuthRedirect","compose","sendMessageCreator","ProfileContainer","Component","refreshProfile","userId","props","match","params","componentDidMount","render","profile","componentDidUpdate","prevProps","prevState","snapshot","mapStateToProps","state","profilePage","isAuth","authPage","toggle","addStatus","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,sBAAR,EAAgCC,eAAhC,QAAsD,+BAAtD;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,kBAAR,QAAiC,6BAAjC;;AAGA,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA8C;AAAA;AAAA;;AAAA,SAC1CC,cAD0C,GACzB,MAAK;AAClB,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,UAAI,CAACA,MAAL,EAAY;AACRA,QAAAA,MAAM,GAAG,GAAT;AACH;;AACD,WAAKC,KAAL,CAAWR,eAAX,CAA2BO,MAA3B;AACH,KAPyC;;AAAA,SAQ1CI,iBAR0C,GAQtB,MAAM;AACtB,WAAKL,cAAL;AACH,KAVyC;;AAAA,SAiB1CM,MAjB0C,GAiBjC,MAAK;AACV,0BACI,oBAAC,OAAD,oBAAa,KAAKJ,KAAlB;AAAyB,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWK,OAA7C;AAAsD,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWT,sBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAGH,KArByC;AAAA;;AAW1Ce,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAG,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,IAAkCQ,SAAS,CAACN,KAAV,CAAgBC,MAAhB,CAAuBH,MAA5D,EAAmE;AAC/D,WAAKD,cAAL;AACH;AACJ;;AAfyC;;AAwB9C,MAAMY,eAAe,GAAIC,KAAD,IAAU;AAC9B,SAAM;AACFN,IAAAA,OAAO,EAAEM,KAAK,CAACC,WAAN,CAAkBP,OADzB;AAEFQ,IAAAA,MAAM,EAAEF,KAAK,CAACG,QAAN,CAAeC,MAFrB;AAGFC,IAAAA,SAAS,EAAEL,KAAK,CAACC,WAAN,CAAkBK;AAH3B,GAAN;AAKH,CAND,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAevB,OAAO,CAACL,OAAO,CAACqB,eAAD,EAAkB;AAAClB,EAAAA,eAAD;AAAiBD,EAAAA;AAAjB,CAAlB,CAAR,EAAoED,UAApE,EAA+EG,gBAA/E,CAAP,CAAwGG,gBAAxG,CAAf","sourcesContent":["import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {addStatusActionCreator, getUsersProfile} from './../../redux/profile-reducer';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n    refreshProfile = () =>{\r\n        let userId = this.props.match.params.userId\r\n        if (!userId){\r\n            userId = '2'\r\n        }\r\n        this.props.getUsersProfile(userId)\r\n    }\r\n    componentDidMount = () => {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render = () =>{\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} addStatus={this.props.addStatusActionCreator}/>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.authPage.toggle,\r\n        addStatus: state.profilePage.status\r\n    }\r\n}\r\n// let mapDispatchToProps = (dispatch) =>{\r\n//\r\n//     return {\r\n//         addStatus: (status) =>{\r\n//             dispatch(addStatusActionCreator(status))\r\n//         }\r\n//     }\r\n// }\r\nexport default compose(connect(mapStateToProps, {getUsersProfile,addStatusActionCreator}),withRouter,withAuthRedirect)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}