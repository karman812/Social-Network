{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0433\\u0430\\\\react\\\\1project\\\\my-app\\\\src\\\\components\\\\Profile\\\\Myposts\\\\MypostsContainer.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport styles from \"./Myposts.module.css\";\nimport Post from './Post/Post';\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport { updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\nimport Myposts from \"./Myposts\";\nimport StoreContext from \"../../../StoreContext\";\nimport { connect } from \"react-redux\";\n\nconst MypostsContainer = props => {\n  // let state = props.store.getState()\n  //\n  // let addPost = () => {\n  //     // props.addPost()\n  //     props.store.dispatch(addPostActionCreator())\n  // }\n  //\n  // let onPostChange = (text) => {\n  //     let action = updateNewPostTextActionCreator(text)\n  //     props.store.dispatch(updateNewPostTextActionCreator(text))\n  // }\n  return /*#__PURE__*/React.createElement(StoreContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, store => {\n    let state = store.getState();\n\n    let addPost = () => {\n      // props.addPost()\n      store.dispatch(addPostActionCreator());\n    };\n\n    let onPostChange = text => {\n      let action = updateNewPostTextActionCreator(text);\n      store.dispatch(updateNewPostTextActionCreator(text));\n    };\n\n    return /*#__PURE__*/React.createElement(Myposts, {\n      updateNewPostNext: onPostChange,\n      addPost: addPost,\n      posts: state.profilePage.postData,\n      newPostText: state.profilePage.newPostText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }\n    });\n  });\n};\n\nlet mapStateToProps = dispatch => {\n  return {\n    addPost: dispatch(addPostActionCreator()),\n    updateNewPostNext: text => {\n      let action = updateNewPostTextActionCreator(text);\n      dispatch(action);\n    }\n  };\n};\n\nlet mapDispatchToProps = state => {\n  return {\n    posts: state.profilePage.postData,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nlet MypostsContainerSuper = connect()(Myposts);\nexport default MypostsContainer;","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/components/Profile/Myposts/MypostsContainer.jsx"],"names":["React","Col","Row","styles","Post","addPostActionCreator","updateNewPostTextActionCreator","Myposts","StoreContext","connect","MypostsContainer","props","store","state","getState","addPost","dispatch","onPostChange","text","action","profilePage","postData","newPostText","mapStateToProps","updateNewPostNext","mapDispatchToProps","posts","MypostsContainerSuper"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,oBAAR,QAAmC,gCAAnC;AACA,SAAQC,8BAAR,QAA6C,gCAA7C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KAAD,IAAS;AACL,QAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,EAAZ;;AAEA,QAAIC,OAAO,GAAG,MAAM;AAChB;AACAH,MAAAA,KAAK,CAACI,QAAN,CAAeX,oBAAoB,EAAnC;AACH,KAHD;;AAKA,QAAIY,YAAY,GAAIC,IAAD,IAAU;AACzB,UAAIC,MAAM,GAAGb,8BAA8B,CAACY,IAAD,CAA3C;AACAN,MAAAA,KAAK,CAACI,QAAN,CAAeV,8BAA8B,CAACY,IAAD,CAA7C;AACH,KAHD;;AAIJ,wBAAO,oBAAC,OAAD;AAAS,MAAA,iBAAiB,EAAED,YAA5B;AAA0C,MAAA,OAAO,EAAEF,OAAnD;AAA4D,MAAA,KAAK,EAAEF,KAAK,CAACO,WAAN,CAAkBC,QAArF;AACE,MAAA,WAAW,EAAER,KAAK,CAACO,WAAN,CAAkBE,WADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEU,GAfd,CADJ;AAoBH,CAjCD;;AAkCA,IAAIC,eAAe,GAAIP,QAAD,IAAa;AAC/B,SAAM;AACFD,IAAAA,OAAO,EAAEC,QAAQ,CAACX,oBAAoB,EAArB,CADf;AAEFmB,IAAAA,iBAAiB,EAAIN,IAAD,IAAQ;AACxB,UAAIC,MAAM,GAAGb,8BAA8B,CAACY,IAAD,CAA3C;AACAF,MAAAA,QAAQ,CAACG,MAAD,CAAR;AACH;AALC,GAAN;AAOH,CARD;;AASA,IAAIM,kBAAkB,GAAIZ,KAAD,IAAU;AAC/B,SAAM;AACFa,IAAAA,KAAK,EAAEb,KAAK,CAACO,WAAN,CAAkBC,QADvB;AAEFC,IAAAA,WAAW,EAAET,KAAK,CAACO,WAAN,CAAkBE;AAF7B,GAAN;AAIH,CALD;;AAMA,IAAKK,qBAAqB,GAAGlB,OAAO,GAAGF,OAAH,CAApC;AACA,eAAeG,gBAAf","sourcesContent":["import React from 'react';\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport styles from \"./Myposts.module.css\"\r\nimport Post from './Post/Post'\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport Myposts from \"./Myposts\";\r\nimport StoreContext from \"../../../StoreContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst MypostsContainer = (props) => {\r\n    // let state = props.store.getState()\r\n    //\r\n    // let addPost = () => {\r\n    //     // props.addPost()\r\n    //     props.store.dispatch(addPostActionCreator())\r\n    // }\r\n    //\r\n    // let onPostChange = (text) => {\r\n    //     let action = updateNewPostTextActionCreator(text)\r\n    //     props.store.dispatch(updateNewPostTextActionCreator(text))\r\n    // }\r\n\r\n    return (\r\n        <StoreContext.Consumer>{\r\n            (store)=>{\r\n                let state = store.getState()\r\n\r\n                let addPost = () => {\r\n                    // props.addPost()\r\n                    store.dispatch(addPostActionCreator())\r\n                }\r\n\r\n                let onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text)\r\n                    store.dispatch(updateNewPostTextActionCreator(text))\r\n                }\r\n            return <Myposts updateNewPostNext={onPostChange} addPost={addPost} posts={state.profilePage.postData}\r\n                     newPostText={state.profilePage.newPostText}/>\r\n                     }\r\n        }\r\n        </StoreContext.Consumer>\r\n    );\r\n}\r\nlet mapStateToProps = (dispatch) =>{\r\n    return{\r\n        addPost: dispatch(addPostActionCreator()),\r\n        updateNewPostNext : (text)=>{\r\n            let action = updateNewPostTextActionCreator(text)\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\nlet mapDispatchToProps = (state) =>{\r\n    return{\r\n        posts: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nlet  MypostsContainerSuper = connect()(Myposts)\r\nexport default MypostsContainer;"]},"metadata":{},"sourceType":"module"}