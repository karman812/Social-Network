{"ast":null,"code":"import React from'react';import{Col,Row}from'react-bootstrap';import styles from\"./Myposts.module.css\";import Post from'./Post/Post';import{Field,reduxForm}from\"redux-form\";import{maxLengthCreator,requiredField}from\"../../../utils/validators/validators\";import{Textarea}from\"../../common/FormControls/FormControls\";var maxLenngth10=maxLengthCreator(10);var Myposts=React.memo(function(props){var postsElements=props.posts.map(function(el){return/*#__PURE__*/React.createElement(Post,{message:el.message,likesCount:el.likesCount});});var onAddPost=function onAddPost(value){props.addPost(value.NewPostBody);};return/*#__PURE__*/React.createElement(Col,{xs:\"12\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xs:\"12\",className:styles.NewPostCol},/*#__PURE__*/React.createElement(AddPostReduxForm,{onSubmit:onAddPost}),/*#__PURE__*/React.createElement(\"a\",{href:\"https://docs.google.com/forms/d/e/1FAIpQLSchQ_1NZwSP75Sx0hyVwAc3cuWNrJHS_62I7CUkjSV3Seiupg/viewform\"}))),postsElements);});var addPostForm=function addPostForm(props){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(Field,{component:Textarea,placeholder:'Напишите свой первый пост',name:'NewPostBody',validate:[requiredField,maxLenngth10]}),/*#__PURE__*/React.createElement(\"button\",null,\"Add post\"));};var AddPostReduxForm=reduxForm({form:'newPostReduxForm'})(addPostForm);export default Myposts;","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/components/Profile/Myposts/Myposts.jsx"],"names":["React","Col","Row","styles","Post","Field","reduxForm","maxLengthCreator","requiredField","Textarea","maxLenngth10","Myposts","memo","props","postsElements","posts","map","el","message","likesCount","onAddPost","value","addPost","NewPostBody","NewPostCol","addPostForm","handleSubmit","AddPostReduxForm","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,GAAR,CAAaC,GAAb,KAAuB,iBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,YAA/B,CACA,OAAQC,gBAAR,CAA0BC,aAA1B,KAA8C,sCAA9C,CACA,OAAQC,QAAR,KAAuB,wCAAvB,CAEA,GAAMC,CAAAA,YAAY,CAAGH,gBAAgB,CAAC,EAAD,CAArC,CACA,GAAMI,CAAAA,OAAO,CAAGX,KAAK,CAACY,IAAN,CAAW,SAAAC,KAAK,CAAI,CAEhC,GAAIC,CAAAA,aAAa,CAAGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,SAAAC,EAAE,CAAI,CACtC,mBACI,oBAAC,IAAD,EAAM,OAAO,CAAEA,EAAE,CAACC,OAAlB,CAA2B,UAAU,CAAED,EAAE,CAACE,UAA1C,EADJ,CAGH,CAJmB,CAApB,CAMA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACvBR,KAAK,CAACS,OAAN,CAAcD,KAAK,CAACE,WAApB,EACH,CAFD,CAGA,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,SAAS,CAAEpB,MAAM,CAACqB,UAA/B,eAGI,oBAAC,gBAAD,EAAkB,QAAQ,CAAEJ,SAA5B,EAHJ,cAII,yBAAG,IAAI,CAAC,qGAAR,EAJJ,CADJ,CADJ,CASKN,aATL,CADJ,CAaH,CAxBe,CAAhB,CAyBA,GAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACZ,KAAD,CAAU,CAC1B,mBACI,4BAAM,QAAQ,CAAEA,KAAK,CAACa,YAAtB,eACI,oBAAC,KAAD,EAAO,SAAS,CAAEjB,QAAlB,CAA4B,WAAW,CAAE,2BAAzC,CAAsE,IAAI,CAAE,aAA5E,CAA2F,QAAQ,CAAE,CAACD,aAAD,CAAgBE,YAAhB,CAArG,EADJ,cAEI,6CAFJ,CADJ,CAMH,CAPD,CAQA,GAAOiB,CAAAA,gBAAgB,CAAGrB,SAAS,CAAC,CAACsB,IAAI,CAAE,kBAAP,CAAD,CAAT,CAAsCH,WAAtC,CAA1B,CACA,cAAed,CAAAA,OAAf","sourcesContent":["import React from 'react';\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport styles from \"./Myposts.module.css\"\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLenngth10 = maxLengthCreator(10)\r\nconst Myposts = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map(el => {\r\n        return (\r\n            <Post message={el.message} likesCount={el.likesCount}/>\r\n        )\r\n    })\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.NewPostBody)\r\n    }\r\n    return (\r\n        <Col xs='12'>\r\n            <Row>\r\n                <Col xs='12' className={styles.NewPostCol}>\r\n                    {/*<textarea ref={newElementPost} value={props.newPostText} onChange={onPostChange}></textarea>*/}\r\n                    {/*<button onClick={onAddPost}>Add post</button>*/}\r\n                    <AddPostReduxForm onSubmit={onAddPost}/>\r\n                    <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSchQ_1NZwSP75Sx0hyVwAc3cuWNrJHS_62I7CUkjSV3Seiupg/viewform\"></a>\r\n                </Col>\r\n            </Row>\r\n            {postsElements}\r\n        </Col>\r\n    );\r\n})\r\nconst addPostForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} placeholder={'Напишите свой первый пост'} name={'NewPostBody'} validate={[requiredField, maxLenngth10]}/>\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\nconst  AddPostReduxForm = reduxForm({form: 'newPostReduxForm'})(addPostForm)\r\nexport default Myposts;"]},"metadata":{},"sourceType":"module"}