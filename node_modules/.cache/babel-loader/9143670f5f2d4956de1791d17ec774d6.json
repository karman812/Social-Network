{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0433\\u0430\\\\react\\\\1project\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport React from \"react\";\nimport styles from \"./Dialogs.module.css\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { sendMessageCreator, updateNewMessageBody } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\n\nconst DialogsContainer = props => {\n  let state = props.store.getState().messagesPage;\n  let DialogsElements = state.dialogsData.map(el => {\n    return /*#__PURE__*/React.createElement(DialogItem, {\n      name: el.name,\n      id: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    });\n  });\n  let MessagesElements = state.messagesData.map(el => {\n    return /*#__PURE__*/React.createElement(Message, {\n      text: el.message,\n      id: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    });\n  });\n\n  let onSendMessageClick = () => {\n    props.store.dispatch(sendMessageCreator());\n  };\n\n  let onNewMessageChange = body => {\n    props.store.dispatch(updateNewMessageBody(body));\n  };\n\n  return /*#__PURE__*/React.createElement(Dialogs, {\n    updateNewMessageBody: onNewMessageChange(),\n    sendMessage: onSendMessageClick,\n    messagesPage: props.store.getState(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default DialogsContainer;","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","styles","Col","Row","NavLink","DialogItem","Message","sendMessageCreator","updateNewMessageBody","Dialogs","DialogsContainer","props","state","store","getState","messagesPage","DialogsElements","dialogsData","map","el","name","id","MessagesElements","messagesData","message","onSendMessageClick","dispatch","onNewMessageChange","body"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,kBAAR,EAA4BC,oBAA5B,QAAuD,6BAAvD;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAEhC,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,YAAnC;AAEA,MAAIC,eAAe,GAAGJ,KAAK,CAACK,WAAN,CAAkBC,GAAlB,CAAsBC,EAAE,IAAI;AAC9C,wBACI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,EAAE,CAACC,IAArB;AAA2B,MAAA,EAAE,EAAED,EAAE,CAACE,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJqB,CAAtB;AAKA,MAAIC,gBAAgB,GAAGV,KAAK,CAACW,YAAN,CAAmBL,GAAnB,CAAuBC,EAAE,IAAI;AAChD,wBACI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEA,EAAE,CAACK,OAAlB;AAA2B,MAAA,EAAE,EAAEL,EAAE,CAACE,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJsB,CAAvB;;AAMA,MAAII,kBAAkB,GAAG,MAAK;AAC1Bd,IAAAA,KAAK,CAACE,KAAN,CAAYa,QAAZ,CAAqBnB,kBAAkB,EAAvC;AACH,GAFD;;AAGA,MAAIoB,kBAAkB,GAAIC,IAAD,IAAS;AAC9BjB,IAAAA,KAAK,CAACE,KAAN,CAAYa,QAAZ,CAAqBlB,oBAAoB,CAACoB,IAAD,CAAzC;AACH,GAFD;;AAMA,sBACI,oBAAC,OAAD;AAAS,IAAA,oBAAoB,EAAED,kBAAkB,EAAjD;AAAqD,IAAA,WAAW,EAAIF,kBAApE;AAAwF,IAAA,YAAY,EAAEd,KAAK,CAACE,KAAN,CAAYC,QAAZ,EAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CA3BD;;AA4BA,eAAeJ,gBAAf","sourcesContent":["import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {sendMessageCreator, updateNewMessageBody} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\nconst DialogsContainer = (props) => {\r\n\r\n    let state = props.store.getState().messagesPage\r\n\r\n    let DialogsElements = state.dialogsData.map(el => {\r\n        return (\r\n            <DialogItem name={el.name} id={el.id}/>\r\n        )\r\n    })\r\n    let MessagesElements = state.messagesData.map(el => {\r\n        return (\r\n            <Message text={el.message} id={el.id}/>\r\n        )\r\n    })\r\n\r\n    let onSendMessageClick = () =>{\r\n        props.store.dispatch(sendMessageCreator())\r\n    }\r\n    let onNewMessageChange = (body) =>{\r\n        props.store.dispatch(updateNewMessageBody(body))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Dialogs updateNewMessageBody={onNewMessageChange()} sendMessage = {onSendMessageClick} messagesPage={props.store.getState()}/>\r\n    );\r\n}\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}