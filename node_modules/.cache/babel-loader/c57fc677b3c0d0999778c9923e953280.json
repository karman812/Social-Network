{"ast":null,"code":"const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nconst initialState = {\n  messagesData: [{\n    id: 1,\n    message: \"Hi\"\n  }, {\n    id: 2,\n    message: \"How are you?\"\n  }, {\n    id: 3,\n    message: \"Im fine. What about you?\"\n  }, {\n    id: 4,\n    message: \"Yo\"\n  }, {\n    id: 5,\n    message: \"Yo\"\n  }, {\n    id: 6,\n    message: \"Yo\"\n  }],\n  dialogsData: [{\n    id: 1,\n    name: \"Vanya\"\n  }, {\n    id: 2,\n    name: \"Katya\"\n  }, {\n    id: 3,\n    name: \"Sveta\"\n  }, {\n    id: 4,\n    name: \"Natasha\"\n  }, {\n    id: 5,\n    name: \"Valera\"\n  }, {\n    id: 6,\n    name: \"Grisha\"\n  }],\n  newMessageBody: 'ddd'\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  let stateCopy;\n\n  switch (action.type) {\n    case UPDATE_NEW_MESSAGE_BODY:\n      stateCopy = { ...state,\n        newMessageBody: action.newText\n      };\n      stateCopy.newMessageBody = action.newText;\n      return stateCopy;\n\n    case SEND_MESSAGE:\n      let newText = stateCopy.newMessageBody;\n      stateCopy = { ...state,\n        newMessageBody: '',\n        messagesData: [...state.messagesData, {\n          id: 10,\n          message: newText\n        }]\n      }; // stateCopy.newMessageBody = ''\n      // stateCopy.messagesData.push({id: 10, message: newText})\n\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport const sendMessageCreator = () => {\n  return {\n    type: SEND_MESSAGE\n  };\n};\nexport const updateNewMessageBody = body => {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    newText: body\n  };\n};\nexport default dialogsReducer;","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/redux/dialogs-reducer.js"],"names":["UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","messagesData","id","message","dialogsData","name","newMessageBody","dialogsReducer","state","action","stateCopy","type","newText","sendMessageCreator","updateNewMessageBody","body"],"mappings":"AAAA,MAAMA,uBAAuB,GAAG,yBAAhC;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,CAAC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE;AAAjB,GAAD,EACV;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE;AAAjB,GADU,EAEV;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE;AAAjB,GAFU,EAGV;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE;AAAjB,GAHU,EAIV;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE;AAAjB,GAJU,EAKV;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE;AAAjB,GALU,CADG;AAOjBC,EAAAA,WAAW,EAAE,CAAC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GAAD,EACT;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GADS,EAET;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GAFS,EAGT;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GAHS,EAIT;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GAJS,EAKT;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,IAAI,EAAE;AAAd,GALS,CAPI;AAajBC,EAAAA,cAAc,EAAE;AAbC,CAArB;;AAgBC,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAEtD,MAAIC,SAAJ;;AAEA,UAAQD,MAAM,CAACE,IAAf;AAEI,SAAKb,uBAAL;AACIY,MAAAA,SAAS,GAAG,EACR,GAAGF,KADK;AAERF,QAAAA,cAAc,EAAEG,MAAM,CAACG;AAFf,OAAZ;AAIAF,MAAAA,SAAS,CAACJ,cAAV,GAA2BG,MAAM,CAACG,OAAlC;AAEA,aAAOF,SAAP;;AACJ,SAAKX,YAAL;AACI,UAAIa,OAAO,GAAGF,SAAS,CAACJ,cAAxB;AACAI,MAAAA,SAAS,GAAG,EACR,GAAGF,KADK;AAERF,QAAAA,cAAc,EAAE,EAFR;AAGRL,QAAAA,YAAY,EAAE,CAAC,GAAGO,KAAK,CAACP,YAAV,EAAwB;AAACC,UAAAA,EAAE,EAAE,EAAL;AAASC,UAAAA,OAAO,EAAES;AAAlB,SAAxB;AAHN,OAAZ,CAFJ,CAOI;AACA;;AACA,aAAOF,SAAP;;AACJ;AACI,aAAOF,KAAP;AArBR;AAuBH,CA3BA;;AA6BD,OAAO,MAAMK,kBAAkB,GAAG,MAAM;AAEpC,SAAO;AACHF,IAAAA,IAAI,EAAEZ;AADH,GAAP;AAGH,CALM;AAMP,OAAO,MAAMe,oBAAoB,GAAIC,IAAD,IAAU;AAE1C,SAAO;AACHJ,IAAAA,IAAI,EAAEb,uBADH;AAEHc,IAAAA,OAAO,EAAEG;AAFN,GAAP;AAKH,CAPM;AASP,eAAeR,cAAf","sourcesContent":["const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nconst initialState = {\r\n    messagesData: [{id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How are you?\"},\r\n        {id: 3, message: \"Im fine. What about you?\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"},\r\n        {id: 6, message: \"Yo\"},],\r\n    dialogsData: [{id: 1, name: \"Vanya\"},\r\n        {id: 2, name: \"Katya\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Natasha\"},\r\n        {id: 5, name: \"Valera\"},\r\n        {id: 6, name: \"Grisha\"},],\r\n    newMessageBody: 'ddd'\r\n}\r\n\r\n const dialogsReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            stateCopy = {\r\n                ...state,\r\n                newMessageBody: action.newText\r\n            }\r\n            stateCopy.newMessageBody = action.newText\r\n\r\n            return stateCopy\r\n        case SEND_MESSAGE:\r\n            let newText = stateCopy.newMessageBody;\r\n            stateCopy = {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messagesData: [...state.messagesData, {id: 10, message: newText}]\r\n            }\r\n            // stateCopy.newMessageBody = ''\r\n            // stateCopy.messagesData.push({id: 10, message: newText})\r\n            return stateCopy\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => {\r\n\r\n    return {\r\n        type: SEND_MESSAGE\r\n    }\r\n}\r\nexport const updateNewMessageBody = (body) => {\r\n\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        newText: body\r\n    }\r\n\r\n}\r\n\r\nexport default dialogsReducer"]},"metadata":{},"sourceType":"module"}