{"ast":null,"code":"import React from\"react\";import{sendMessageCreator}from\"../../redux/dialogs-reducer\";import Dialogs from\"./Dialogs\";import{connect}from\"react-redux\";import{withAuthRedirect}from\"../../hoc/withAuthRedirect\";import{compose}from\"redux\";var mapDispatchToProps=function mapDispatchToProps(dispatch){return{sendMessage:function sendMessage(message){dispatch(sendMessageCreator(message));}};};var mapStateToProps=function mapStateToProps(state){return{messagesPage:state.messagesPage,isAuth:state.authPage.toggle};};var isAuthDialogs=withAuthRedirect(Dialogs);export default compose(connect(mapStateToProps,mapDispatchToProps),withAuthRedirect)(isAuthDialogs);","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","sendMessageCreator","Dialogs","connect","withAuthRedirect","compose","mapDispatchToProps","dispatch","sendMessage","message","mapStateToProps","state","messagesPage","isAuth","authPage","toggle","isAuthDialogs"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,kBAAR,KAAiC,6BAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,gBAAR,KAA+B,4BAA/B,CACA,OAAQC,OAAR,KAAsB,OAAtB,CAGA,GAAIC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAa,CAElC,MAAO,CACHC,WAAW,CAAE,qBAACC,OAAD,CAAY,CACrBF,QAAQ,CAACN,kBAAkB,CAACQ,OAAD,CAAnB,CAAR,CACH,CAHE,CAAP,CAKH,CAPD,CAQA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAU,CAC5B,MAAO,CACHC,YAAY,CAAED,KAAK,CAACC,YADjB,CAEHC,MAAM,CAAEF,KAAK,CAACG,QAAN,CAAeC,MAFpB,CAAP,CAIH,CALD,CAMA,GAAIC,CAAAA,aAAa,CAAGZ,gBAAgB,CAACF,OAAD,CAApC,CAEA,cAAeG,CAAAA,OAAO,CAACF,OAAO,CAACO,eAAD,CAAkBJ,kBAAlB,CAAR,CAA8CF,gBAA9C,CAAP,CAAuEY,aAAvE,CAAf","sourcesContent":["import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n\r\n    return {\r\n        sendMessage: (message) =>{\r\n            dispatch(sendMessageCreator(message))\r\n        }\r\n    }\r\n}\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n        isAuth: state.authPage.toggle\r\n    }\r\n}\r\nlet isAuthDialogs = withAuthRedirect(Dialogs)\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(isAuthDialogs);"]},"metadata":{},"sourceType":"module"}