{"ast":null,"code":"import { getUsers } from \"../api/api\";\nimport { updateObjextsInArray } from \"../utils/object-helpers\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst CURRENT_PAGE = 'CURRENT-PAGE';\nconst TOTAL_USERS_COUNT = 'TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: updateObjextsInArray(state.users, action.userId, \"id\", {\n          followed: true\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: updateObjextsInArray(state.users, action.userId, \"id\", {\n          followed: false\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = userId => {\n  return {\n    type: FOLLOW,\n    userId: userId\n  };\n};\nexport const unfollow = userId => {\n  return {\n    type: UNFOLLOW,\n    userId: userId\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport const setCurrentPage = currentPage => {\n  return {\n    type: CURRENT_PAGE,\n    currentPage: currentPage\n  };\n};\nexport const setTotalUsersCount = totalUsersCount => {\n  return {\n    type: TOTAL_USERS_COUNT,\n    count: totalUsersCount\n  };\n};\nexport const toggleIsFetching = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching: isFetching\n  };\n};\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\n  console.log(currentPage);\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    let response = await getUsers(currentPage, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(response.items));\n    dispatch(setTotalUsersCount(response.totalCount));\n    dispatch(setCurrentPage(currentPage));\n  };\n};\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/redux/users-reducer.js"],"names":["getUsers","updateObjextsInArray","FOLLOW","UNFOLLOW","SET_USERS","CURRENT_PAGE","TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","userReducer","state","action","type","userId","followed","count","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","getUsersThunkCreator","console","log","dispatch","response","items","totalCount"],"mappings":"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","sourcesContent":["import {getUsers} from \"../api/api\";\r\nimport {updateObjextsInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst CURRENT_PAGE = 'CURRENT-PAGE';\r\nconst TOTAL_USERS_COUNT = 'TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjextsInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjextsInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId: userId\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId: userId\r\n    }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: CURRENT_PAGE,\r\n        currentPage: currentPage\r\n    }\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n    return {\r\n        type: TOTAL_USERS_COUNT,\r\n        count: totalUsersCount\r\n    }\r\n}\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n}\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    console.log(currentPage)\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let response = await getUsers(currentPage, pageSize)\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(response.items))\r\n            dispatch(setTotalUsersCount(response.totalCount))\r\n        dispatch(setCurrentPage(currentPage))\r\n\r\n    }\r\n}\r\n\r\nexport default userReducer"]},"metadata":{},"sourceType":"module"}