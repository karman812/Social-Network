{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0433\\u0430\\\\react\\\\1project\\\\my-app\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\";\nimport React, { useState } from \"react\";\nimport styles from \"../../Users/users.module.css\";\nimport { Container, Col, Row } from \"react-bootstrap\";\n\nlet Paginator = ({\n  currentPage,\n  onPageChanged,\n  totalUsersCount,\n  pageSize,\n  portionSize = 10\n}) => {\n  console.log(currentPage);\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionNumber = (portionNumber + 1) * portionSize + 1;\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, \"PREV\"), pages.filter(p => p >= leftPortionNumber && p <= rightPortionNumber).map(el => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: currentPage == el && styles.selectedPage,\n      onClick: e => {\n        onPageChanged(el);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 40\n      }\n    }, el);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"NEXT\")));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","styles","Container","Col","Row","Paginator","currentPage","onPageChanged","totalUsersCount","pageSize","portionSize","console","log","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","filter","p","map","el","selectedPage","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAkC,iBAAlC;;AAGA,IAAIC,SAAS,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,aAAd;AAA4BC,EAAAA,eAA5B;AAA4CC,EAAAA,QAA5C;AAAsDC,EAAAA,WAAW,GAAG;AAApE,CAAD,KAA6E;AAC7FC,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACI,MAAIO,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;AACA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAACH,WAArB,CAAnB;AACA,MAAI,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIsB,iBAAiB,GAAG,CAACF,aAAa,GAAC,CAAf,IAAkBV,WAAlB,GAA8B,CAAtD;AACA,MAAIa,kBAAkB,GAAG,CAACH,aAAa,GAAC,CAAf,IAAkBV,WAAlB,GAA8B,CAAvD;AAEA,sBACY,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,aAAa,GAAC,CAAd,iBACD;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACC,MAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AAAkC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAKQJ,KAAK,CAACQ,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIH,iBAAL,IAA0BG,CAAC,IAAIF,kBAAjD,EAAqEG,GAArE,CAAyEC,EAAE,IAAI;AAC3E,wBAAO;AAAM,MAAA,SAAS,EAAErB,WAAW,IAAIqB,EAAf,IAAqB1B,MAAM,CAAC2B,YAA7C;AAA2D,MAAA,OAAO,EAAGC,CAAD,IAAO;AAACtB,QAAAA,aAAa,CAACoB,EAAD,CAAb;AAAmB,OAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkGA,EAAlG,CAAP;AACH,GAFD,CALR,EASKR,YAAY,GAAGC,aAAf,iBACD;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACC,MAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AAAkC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,CADJ,CADZ;AAsBH,CAnCD;;AAoCA,eAAef,SAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport styles from \"../../Users/users.module.css\";\r\n\r\nimport {Container, Col, Row} from \"react-bootstrap\";\r\n\r\n\r\nlet Paginator = ({currentPage, onPageChanged,totalUsersCount,pageSize, portionSize = 10}) => {\r\nconsole.log(currentPage)\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber-1)*portionSize+1\r\n    let rightPortionNumber = (portionNumber+1)*portionSize+1\r\n\r\n    return (\r\n                <Row>\r\n                    <Col>\r\n                        {portionNumber>1 &&\r\n                        <button onClick={() => {setPortionNumber(portionNumber-1)}}>PREV</button>\r\n                        }\r\n                        {\r\n                            pages.filter(p => p >= leftPortionNumber && p <= rightPortionNumber).map(el => {\r\n                                return <span className={currentPage == el && styles.selectedPage} onClick={(e) => {onPageChanged(el);}}>{el}</span>\r\n                            })\r\n                        }\r\n                        {portionCount > portionNumber &&\r\n                        <button onClick={() => {setPortionNumber(portionNumber+1)}}>NEXT</button>\r\n                        }\r\n                    </Col>\r\n                    {/*<Col xs='12'>*/}\r\n                    {/*    {pages.map(el => {*/}\r\n                    {/*        return <span className={currentPage === el && styles.selectedPage} onClick={(event) => {onPageChanged(el);}}>{el}</span>*/}\r\n                    {/*    })}*/}\r\n                    {/*</Col>*/}\r\n                </Row>\r\n    )\r\n}\r\nexport default Paginator"]},"metadata":{},"sourceType":"module"}