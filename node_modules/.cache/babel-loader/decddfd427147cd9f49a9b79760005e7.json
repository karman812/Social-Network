{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0433\\u0430\\\\react\\\\1project\\\\my-app\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\"; // import preloader from \"../../../public/Double Ring-1s-200px.svg\"\n\nimport { follow, setCurrentPage, setTotalUsersCountAC, setUsers, toggleIsFetchingAC, unfollow } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/Preloader\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCountAC(response.data.totalCount);\n    });\n  }\n\n  render() {\n    // console.log(this.props)\n    // {this.props.isFetching ? <img src=\"\" alt=\"\"/> : null}\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      isFetching: this.props.isFetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(follow(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollow(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsers(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPage(pageNumber));\n    },\n    setTotalUsersCountAC: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n}; // let UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersContainer)\n\n\nexport default connect(mapStateToProps, {\n  follow: follow,\n  unfollow: unfollow,\n  setUsers: setUsers,\n  setCurrentPage: setCurrentPage,\n  setTotalUsersCountAC: setTotalUsersCountAC,\n  toggleIsFetching: toggleIsFetchingAC\n})(UsersContainer);","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setCurrentPage","setTotalUsersCountAC","setUsers","toggleIsFetchingAC","unfollow","axios","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","toggleIsFetching","get","pageSize","then","response","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n// import preloader from \"../../../public/Double Ring-1s-200px.svg\"\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCountAC,\r\n    setUsers,\r\n    toggleIsFetchingAC,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(response.data.items)\r\n            this.props.setTotalUsersCountAC(response.data.totalCount)\r\n        })\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(response.data.items)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        // {this.props.isFetching ? <img src=\"\" alt=\"\"/> : null}\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   isFetching={this.props.isFetching}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(follow(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollow(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsers(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPage(pageNumber))\r\n        },\r\n        setTotalUsersCountAC: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}\r\n\r\n// let UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersContainer)\r\nexport default connect(mapStateToProps, {\r\n    follow: follow,\r\n    unfollow: unfollow,\r\n    setUsers: setUsers,\r\n    setCurrentPage: setCurrentPage,\r\n    setTotalUsersCountAC: setTotalUsersCountAC,\r\n    toggleIsFetching: toggleIsFetchingAC\r\n})(UsersContainer);"]},"metadata":{},"sourceType":"module"}