{"ast":null,"code":"import React from \"react\";\nimport styles from \"./Dialogs.module.css\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { sendMessageCreator, updateNewMessageBody } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\"; // const DialogsContainer = (props) => {\n//\n//     return (\n//         <StoreContext.Consumer>{\n//             (store) => {\n//                 let state = store.getState().messagesPage\n//\n//                 let DialogsElements = state.dialogsData.map(el => {\n//                     return (\n//                         <DialogItem name={el.name} id={el.id}/>\n//                     )\n//                 })\n//                 let MessagesElements = state.messagesData.map(el => {\n//                     return (\n//                         <Message text={el.message} id={el.id}/>\n//                     )\n//                 })\n//\n//                 let onSendMessageClick = () =>{\n//                     store.dispatch(sendMessageCreator())\n//                 }\n//                 let onNewMessageChange = (body) =>{\n//                     store.dispatch(updateNewMessageBody(body))\n//                 }\n//             return  <Dialogs updateNewMessageBody={onNewMessageChange} sendMessage = {onSendMessageClick} messagesPage={store.getState().messagesPage}/>\n//             }\n//         }\n//         </StoreContext.Consumer>\n//     );\n// }\n\nlet mapStateToProps = state => {\n  return {\n    messagesPage: state.messagesPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  debugger;\n  return {\n    updateNewMessageBody: dispatch(sendMessageCreator()),\n    sendMessage: dispatch(updateNewMessageBody())\n  };\n};\n\nlet DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","styles","Col","Row","NavLink","DialogItem","Message","sendMessageCreator","updateNewMessageBody","Dialogs","connect","mapStateToProps","state","messagesPage","mapDispatchToProps","dispatch","sendMessage","DialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,kBAAR,EAA4BC,oBAA5B,QAAuD,6BAAvD;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAAQC,OAAR,QAAsB,aAAtB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAIC,KAAD,IAAU;AAC5B,SAAO;AACHC,IAAAA,YAAY,EAAED,KAAK,CAACC;AADjB,GAAP;AAGH,CAJD;;AAKA,IAAIC,kBAAkB,GAAIC,QAAD,IAAa;AAClC;AACA,SAAO;AACHP,IAAAA,oBAAoB,EAAEO,QAAQ,CAACR,kBAAkB,EAAnB,CAD3B;AAEHS,IAAAA,WAAW,EAAED,QAAQ,CAACP,oBAAoB,EAArB;AAFlB,GAAP;AAIH,CAND;;AAOA,IAAIS,gBAAgB,GAAGP,OAAO,CAACC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CL,OAA7C,CAAvB;AACA,eAAeQ,gBAAf","sourcesContent":["import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {sendMessageCreator, updateNewMessageBody} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>{\r\n//             (store) => {\r\n//                 let state = store.getState().messagesPage\r\n//\r\n//                 let DialogsElements = state.dialogsData.map(el => {\r\n//                     return (\r\n//                         <DialogItem name={el.name} id={el.id}/>\r\n//                     )\r\n//                 })\r\n//                 let MessagesElements = state.messagesData.map(el => {\r\n//                     return (\r\n//                         <Message text={el.message} id={el.id}/>\r\n//                     )\r\n//                 })\r\n//\r\n//                 let onSendMessageClick = () =>{\r\n//                     store.dispatch(sendMessageCreator())\r\n//                 }\r\n//                 let onNewMessageChange = (body) =>{\r\n//                     store.dispatch(updateNewMessageBody(body))\r\n//                 }\r\n//             return  <Dialogs updateNewMessageBody={onNewMessageChange} sendMessage = {onSendMessageClick} messagesPage={store.getState().messagesPage}/>\r\n//             }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    debugger\r\n    return {\r\n        updateNewMessageBody: dispatch(sendMessageCreator()),\r\n        sendMessage: dispatch(updateNewMessageBody())\r\n    }\r\n}\r\nlet DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}