{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0433\\u0430\\\\react\\\\1project\\\\my-app\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { setUserProfile } from './../../redux/profile-reducer';\nimport { withRouter } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { getUsersProfile } from './../../redux/profile-reducer';\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      let userId = this.props.match.params.userId;\n\n      if (!userId) {\n        userId = '2';\n      }\n\n      this.props.getUsersProfile(userId);\n    };\n\n    this.render = () => {\n      if (this.props.isAuth == false) {\n        /*#__PURE__*/\n        React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 40\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n        profile: this.props.profile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }));\n    };\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    isAuth: state.authPage.toggle\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getUsersProfile\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","setUserProfile","withRouter","Redirect","getUsersProfile","withAuthRedirect","compose","ProfileContainer","Component","componentDidMount","userId","props","match","params","render","isAuth","profile","mapStateToProps","state","profilePage","authPage","toggle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,+BAA7B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,eAAR,QAA8B,+BAA9B;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAGA,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA8C;AAAA;AAAA;;AAAA,SAC1CC,iBAD0C,GACtB,MAAM;AACtB,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,UAAI,CAACA,MAAL,EAAY;AACRA,QAAAA,MAAM,GAAG,GAAT;AACH;;AACD,WAAKC,KAAL,CAAWP,eAAX,CAA2BM,MAA3B;AACH,KAPyC;;AAAA,SAS1CI,MAT0C,GASjC,MAAK;AACV,UAAG,KAAKH,KAAL,CAAWI,MAAX,IAAqB,KAAxB,EAA8B;AAAC;AAAA,4BAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;;AACvD,0BACI,oBAAC,OAAD,oBAAa,KAAKJ,KAAlB;AAAyB,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWK,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAGH,KAdyC;AAAA;;AAAA;;AAiB9C,MAAMC,eAAe,GAAIC,KAAD,IAAU;AAC9B,SAAM;AACFF,IAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OADzB;AAEFD,IAAAA,MAAM,EAAEG,KAAK,CAACE,QAAN,CAAeC;AAFrB,GAAN;AAIH,CALD;;AAMA,eAAef,OAAO,CAACN,OAAO,CAACiB,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAR,EAA6CF,UAA7C,EAAwDG,gBAAxD,CAAP,CAAiFE,gBAAjF,CAAf","sourcesContent":["import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserProfile} from './../../redux/profile-reducer'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getUsersProfile} from './../../redux/profile-reducer';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n    componentDidMount = () => {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId){\r\n            userId = '2'\r\n        }\r\n        this.props.getUsersProfile(userId)\r\n    }\r\n\r\n    render = () =>{\r\n        if(this.props.isAuth == false){<Redirect to='/login'/>}\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.authPage.toggle\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, {getUsersProfile}),withRouter,withAuthRedirect)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}