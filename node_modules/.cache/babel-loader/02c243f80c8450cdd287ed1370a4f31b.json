{"ast":null,"code":"import { getProfile } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USERS_PROFILE = \"SET-USERS-PROFILE\";\nconst SET_USERS_STATUS = \"SET-USERS-STATUS\";\nlet initialState = {\n  postData: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 45\n  }, {\n    id: 2,\n    message: \"It's my first post!\",\n    likesCount: 25\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 3,\n          message: action.newPostBody,\n          likesCount: 5\n        };\n        let copyState = { ...state,\n          postData: [...state.postData, newPost]\n        };\n        return copyState;\n      }\n\n    case SET_USERS_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_USERS_STATUS:\n      {\n        return { ...state,\n          status: action.newStatusBody\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostBody => {\n  return {\n    type: ADD_POST,\n    newPostBody: newPostBody\n  };\n};\nexport const addStatusActionCreator = newStatusBody => {\n  console.log(\"ye\");\n  return {\n    type: SET_USERS_STATUS,\n    newStatusBody: newStatusBody\n  };\n};\nexport const setUserProfile = profile => {\n  return {\n    type: SET_USERS_PROFILE,\n    profile\n  };\n};\nexport const getUsersProfile = userId => {\n  return dispatch => {\n    getProfile(userId).then(response => {\n      dispatch(setUserProfile(response.data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/redux/profile-reducer.js"],"names":["getProfile","ADD_POST","SET_USERS_PROFILE","SET_USERS_STATUS","initialState","postData","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","newPostBody","copyState","newStatusBody","addPostActionCreator","addStatusActionCreator","console","log","setUserProfile","getUsersProfile","userId","dispatch","then","response","data"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,YAAzB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,CAAC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,kBAAjB;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GAAD,EACN;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,qBAAjB;AAAwCC,IAAAA,UAAU,EAAE;AAApD,GADM,CADK;AAGfC,EAAAA,OAAO,EAAE,IAHM;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAErD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,QAAL;AAAc;AACV,YAAIc,OAAO,GAAG;AAACT,UAAAA,EAAE,EAAE,CAAL;AAAQC,UAAAA,OAAO,EAAEM,MAAM,CAACG,WAAxB;AAAqCR,UAAAA,UAAU,EAAE;AAAjD,SAAd;AACA,YAAIS,SAAS,GAAG,EACZ,GAAGL,KADS;AAEZP,UAAAA,QAAQ,EAAE,CAAC,GAAGO,KAAK,CAACP,QAAV,EAAoBU,OAApB;AAFE,SAAhB;AAIA,eAAOE,SAAP;AACH;;AACD,SAAKf,iBAAL;AAAwB;AACpB,eAAO,EACH,GAAGU,KADA;AAEHH,UAAAA,OAAO,EAAEI,MAAM,CAACJ;AAFb,SAAP;AAIH;;AACD,SAAKN,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGS,KADA;AAEHF,UAAAA,MAAM,EAAEG,MAAM,CAACK;AAFZ,SAAP;AAIH;;AACD;AACI,aAAON,KAAP;AAtBR;AAyBH,CA3BD;;AA6BA,OAAO,MAAMO,oBAAoB,GAAIH,WAAD,IAAiB;AAEjD,SAAO;AACHF,IAAAA,IAAI,EAAEb,QADH;AAEHe,IAAAA,WAAW,EAAEA;AAFV,GAAP;AAIH,CANM;AAOP,OAAO,MAAMI,sBAAsB,GAAIF,aAAD,IAAmB;AACrDG,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAO;AACHR,IAAAA,IAAI,EAAEX,gBADH;AAEHe,IAAAA,aAAa,EAAEA;AAFZ,GAAP;AAIH,CANM;AAQP,OAAO,MAAMK,cAAc,GAAId,OAAD,IAAa;AACvC,SAAO;AACHK,IAAAA,IAAI,EAAEZ,iBADH;AAEHO,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMe,eAAe,GAAIC,MAAD,IAAW;AACtC,SAAQC,QAAD,IAAa;AAChB1B,IAAAA,UAAU,CAACyB,MAAD,CAAV,CAAmBE,IAAnB,CAAwBC,QAAQ,IAAI;AAChCF,MAAAA,QAAQ,CAACH,cAAc,CAACK,QAAQ,CAACC,IAAV,CAAf,CAAR;AACH,KAFD;AAGH,GAJD;AAKH,CANM;AAQP,eAAelB,cAAf","sourcesContent":["import {getProfile} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USERS_PROFILE = \"SET-USERS-PROFILE\"\r\nconst SET_USERS_STATUS = \"SET-USERS-STATUS\"\r\n\r\nlet initialState = {\r\n    postData: [{id: 1, message: 'Hi, how are you?', likesCount: 45},\r\n        {id: 2, message: \"It's my first post!\", likesCount: 25},],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:{\r\n            let newPost = {id: 3, message: action.newPostBody, likesCount: 5}\r\n            let copyState = {\r\n                ...state,\r\n                postData: [...state.postData, newPost],\r\n            }\r\n            return copyState\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_USERS_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.newStatusBody\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostBody) => {\r\n\r\n    return {\r\n        type: ADD_POST,\r\n        newPostBody: newPostBody\r\n    }\r\n}\r\nexport const addStatusActionCreator = (newStatusBody) => {\r\n    console.log(\"ye\")\r\n    return {\r\n        type: SET_USERS_STATUS,\r\n        newStatusBody: newStatusBody\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USERS_PROFILE,\r\n        profile\r\n    }\r\n}\r\nexport const getUsersProfile = (userId) =>{\r\n    return (dispatch) =>{\r\n        getProfile(userId).then(response => {\r\n            dispatch(setUserProfile(response.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}