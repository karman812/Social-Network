{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      postData: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 45\n      }, {\n        id: 2,\n        message: \"It's my first post!\",\n        likesCount: 25\n      }],\n      newPostText: 'Write new post'\n    },\n    messagesPage: {\n      messagesData: [{\n        id: 1,\n        message: \"Hi\"\n      }, {\n        id: 2,\n        message: \"How are you?\"\n      }, {\n        id: 3,\n        message: \"Im fine. What about you?\"\n      }, {\n        id: 4,\n        message: \"Yo\"\n      }, {\n        id: 5,\n        message: \"Yo\"\n      }, {\n        id: 6,\n        message: \"Yo\"\n      }],\n      dialogsData: [{\n        id: 1,\n        name: \"Vanya\"\n      }, {\n        id: 2,\n        name: \"Katya\"\n      }, {\n        id: 3,\n        name: \"Sveta\"\n      }, {\n        id: 4,\n        name: \"Natasha\"\n      }, {\n        id: 5,\n        name: \"Valera\"\n      }, {\n        id: 6,\n        name: \"Grisha\"\n      }]\n    }\n  },\n\n  _callSubscriber() {\n    console.log('nabil kot');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  _addPost() {\n    let newPost = {\n      id: 3,\n      message: this._state.profilePage.newPostText,\n      likesCount: 5\n    };\n\n    this._state.profilePage.postData.push(newPost);\n\n    this._state.profilePage.newPostText = '';\n\n    this._callSubscriber(this._state);\n  },\n\n  _updateNewPostText(newText) {\n    this._state.profilePage.newPostText = newText;\n\n    this._callSubscriber(this._state);\n  },\n\n  dispatch(action) {\n    if (action.type === 'ADD-POST') {\n      this._addPost();\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._updateNewPostText(action.newText);\n    }\n  }\n\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/redux/state.js"],"names":["store","_state","profilePage","postData","id","message","likesCount","newPostText","messagesPage","messagesData","dialogsData","name","_callSubscriber","console","log","getState","subscribe","observer","_addPost","newPost","push","_updateNewPostText","newText","dispatch","action","type","window"],"mappings":"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","sourcesContent":["let store = {\r\n    _state: {\r\n        profilePage: {\r\n            postData: [{id: 1, message: 'Hi, how are you?', likesCount: 45},\r\n                {id: 2, message: \"It's my first post!\", likesCount: 25},],\r\n            newPostText: 'Write new post'\r\n        },\r\n        messagesPage: {\r\n            messagesData: [{id: 1, message: \"Hi\"},\r\n                {id: 2, message: \"How are you?\"},\r\n                {id: 3, message: \"Im fine. What about you?\"},\r\n                {id: 4, message: \"Yo\"},\r\n                {id: 5, message: \"Yo\"},\r\n                {id: 6, message: \"Yo\"},],\r\n            dialogsData: [{id: 1, name: \"Vanya\"},\r\n                {id: 2, name: \"Katya\"},\r\n                {id: 3, name: \"Sveta\"},\r\n                {id: 4, name: \"Natasha\"},\r\n                {id: 5, name: \"Valera\"},\r\n                {id: 6, name: \"Grisha\"},],\r\n        }\r\n    },\r\n    _callSubscriber() {\r\n        console.log('nabil kot')\r\n    },\r\n\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer\r\n    },\r\n\r\n\r\n    _addPost() {\r\n        let newPost = {\r\n            id: 3,\r\n            message: this._state.profilePage.newPostText,\r\n            likesCount: 5\r\n        }\r\n        this._state.profilePage.postData.push(newPost);\r\n        this._state.profilePage.newPostText = ('');\r\n        this._callSubscriber(this._state)\r\n    },\r\n    _updateNewPostText(newText) {\r\n        this._state.profilePage.newPostText = newText;\r\n        this._callSubscriber(this._state)\r\n    },\r\n    dispatch(action){\r\n        if (action.type === 'ADD-POST'){\r\n            this._addPost()\r\n        }else if (action.type === 'UPDATE-NEW-POST-TEXT'){\r\n            this._updateNewPostText(action.newText)\r\n        }\r\n    }\r\n}\r\n\r\nexport default store;\r\nwindow.store = store;"]},"metadata":{},"sourceType":"module"}