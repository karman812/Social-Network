{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karim\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0433\\u0430\\\\react\\\\1project\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport React from \"react\";\nimport styles from \"./Dialogs.module.css\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { sendMessageCreator, updateNewMessageBody } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport StoreContext from \"../../StoreContext\";\nimport { connect } from \"react-redux\";\n\nconst DialogsContainer = props => {\n  return /*#__PURE__*/React.createElement(StoreContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, store => {\n    let state = store.getState().messagesPage;\n    let DialogsElements = state.dialogsData.map(el => {\n      return /*#__PURE__*/React.createElement(DialogItem, {\n        name: el.name,\n        id: el.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      });\n    });\n    let MessagesElements = state.messagesData.map(el => {\n      return /*#__PURE__*/React.createElement(Message, {\n        text: el.message,\n        id: el.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }\n      });\n    });\n\n    let onSendMessageClick = () => {\n      store.dispatch(sendMessageCreator());\n    };\n\n    let onNewMessageChange = body => {\n      store.dispatch(updateNewMessageBody(body));\n    };\n\n    return /*#__PURE__*/React.createElement(Dialogs, {\n      updateNewMessageBody: onNewMessageChange,\n      sendMessage: onSendMessageClick,\n      messagesPage: store.getState().messagesPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    });\n  });\n};\n\nlet mapStateToProps = state => {\n  return {\n    messagesPage: state.messagesPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageBody: dispatch(sendMessageCreator()),\n    sendMessage: dispatch(updateNewMessageBody())\n  };\n};\n\nlet superDialogsContainer = connect(updateNewMessageBody)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["C:/Users/Karim/Desktop/прога/react/1project/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","styles","Col","Row","NavLink","DialogItem","Message","sendMessageCreator","updateNewMessageBody","Dialogs","StoreContext","connect","DialogsContainer","props","store","state","getState","messagesPage","DialogsElements","dialogsData","map","el","name","id","MessagesElements","messagesData","message","onSendMessageClick","dispatch","onNewMessageChange","body","mapStateToProps","mapDispatchToProps","sendMessage","superDialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,kBAAR,EAA4BC,oBAA5B,QAAuD,6BAAvD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAEhC,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KAAD,IAAW;AACP,QAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,GAAiBC,YAA7B;AAEA,QAAIC,eAAe,GAAGH,KAAK,CAACI,WAAN,CAAkBC,GAAlB,CAAsBC,EAAE,IAAI;AAC9C,0BACI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,EAAE,CAACC,IAArB;AAA2B,QAAA,EAAE,EAAED,EAAE,CAACE,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJqB,CAAtB;AAKA,QAAIC,gBAAgB,GAAGT,KAAK,CAACU,YAAN,CAAmBL,GAAnB,CAAuBC,EAAE,IAAI;AAChD,0BACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEA,EAAE,CAACK,OAAlB;AAA2B,QAAA,EAAE,EAAEL,EAAE,CAACE,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJsB,CAAvB;;AAMA,QAAII,kBAAkB,GAAG,MAAK;AAC1Bb,MAAAA,KAAK,CAACc,QAAN,CAAerB,kBAAkB,EAAjC;AACH,KAFD;;AAGA,QAAIsB,kBAAkB,GAAIC,IAAD,IAAS;AAC9BhB,MAAAA,KAAK,CAACc,QAAN,CAAepB,oBAAoB,CAACsB,IAAD,CAAnC;AACH,KAFD;;AAGJ,wBAAQ,oBAAC,OAAD;AAAS,MAAA,oBAAoB,EAAED,kBAA/B;AAAmD,MAAA,WAAW,EAAIF,kBAAlE;AAAsF,MAAA,YAAY,EAAEb,KAAK,CAACE,QAAN,GAAiBC,YAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACC,GAtBL,CADJ;AA2BH,CA7BD;;AA8BA,IAAIc,eAAe,GAAIhB,KAAD,IAAU;AAC5B,SAAO;AACHE,IAAAA,YAAY,EAAEF,KAAK,CAACE;AADjB,GAAP;AAGH,CAJD;;AAKA,IAAIe,kBAAkB,GAAIJ,QAAD,IAAa;AAClC,SAAO;AACHpB,IAAAA,oBAAoB,EAAEoB,QAAQ,CAACrB,kBAAkB,EAAnB,CAD3B;AAEH0B,IAAAA,WAAW,EAAEL,QAAQ,CAACpB,oBAAoB,EAArB;AAFlB,GAAP;AAIH,CALD;;AAMA,IAAI0B,qBAAqB,GAAGvB,OAAO,CAACH,oBAAD,CAAP,CAA+BC,OAA/B,CAA5B;AACA,eAAeG,gBAAf","sourcesContent":["import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {sendMessageCreator, updateNewMessageBody} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst DialogsContainer = (props) => {\r\n\r\n    return (\r\n        <StoreContext.Consumer>{\r\n            (store) => {\r\n                let state = store.getState().messagesPage\r\n\r\n                let DialogsElements = state.dialogsData.map(el => {\r\n                    return (\r\n                        <DialogItem name={el.name} id={el.id}/>\r\n                    )\r\n                })\r\n                let MessagesElements = state.messagesData.map(el => {\r\n                    return (\r\n                        <Message text={el.message} id={el.id}/>\r\n                    )\r\n                })\r\n\r\n                let onSendMessageClick = () =>{\r\n                    store.dispatch(sendMessageCreator())\r\n                }\r\n                let onNewMessageChange = (body) =>{\r\n                    store.dispatch(updateNewMessageBody(body))\r\n                }\r\n            return  <Dialogs updateNewMessageBody={onNewMessageChange} sendMessage = {onSendMessageClick} messagesPage={store.getState().messagesPage}/>\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n    );\r\n}\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        updateNewMessageBody: dispatch(sendMessageCreator()),\r\n        sendMessage: dispatch(updateNewMessageBody())\r\n    }\r\n}\r\nlet superDialogsContainer = connect(updateNewMessageBody,)(Dialogs)\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}